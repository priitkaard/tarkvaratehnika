buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.qaengine'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("com.auth0:java-jwt:3.4.0")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compile 'commons-beanutils:commons-beanutils:1.9.3'
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"
	compile 'org.jsoup:jsoup:1.7.2'
	
	compile 'org.postgresql:postgresql:42.1.1'
    runtimeOnly 'com.h2database:h2'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task task2 {
    doLast {
        println "Task 2"
    }
}

task task3 {
    doLast {
        println "Task 3"
    }
}

task task1 {
    dependsOn task2
    dependsOn task3
    doLast {
		println "Task 1"
	}
}

task deploy(type: Exec) {
    dependsOn jar
    commandLine './deploy.sh'
    println 'Uploading jar to server...'
}

task deployClient(type: Exec) {
    commandLine './deploy2.sh'
    println 'Building frontend and copying to S3'
}